
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIMPDIMPleftANDORAND DIMP IMP LPAREN NOT OR RPAREN VARIABLEexpression : termexpression : expression AND termexpression : expression OR termexpression : NOT expressionexpression : expression IMP expressionexpression : expression DIMP expressionterm : factorfactor : VARIABLEfactor : LPAREN expression RPAREN'
    
_lr_action_items = {'NOT':([0,3,6,9,10,],[3,3,3,3,3,]),'VARIABLE':([0,3,6,7,8,9,10,],[5,5,5,5,5,5,5,]),'LPAREN':([0,3,6,7,8,9,10,],[6,6,6,6,6,6,6,]),'$end':([1,2,4,5,11,13,14,15,16,17,],[0,-1,-7,-8,-4,-2,-3,-5,-6,-9,]),'AND':([1,2,4,5,11,12,13,14,15,16,17,],[7,-1,-7,-8,7,7,-2,-3,7,7,-9,]),'OR':([1,2,4,5,11,12,13,14,15,16,17,],[8,-1,-7,-8,8,8,-2,-3,8,8,-9,]),'IMP':([1,2,4,5,11,12,13,14,15,16,17,],[9,-1,-7,-8,9,9,-2,-3,-5,-6,-9,]),'DIMP':([1,2,4,5,11,12,13,14,15,16,17,],[10,-1,-7,-8,10,10,-2,-3,-5,-6,-9,]),'RPAREN':([2,4,5,11,12,13,14,15,16,17,],[-1,-7,-8,-4,17,-2,-3,-5,-6,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,3,6,9,10,],[1,11,12,15,16,]),'term':([0,3,6,7,8,9,10,],[2,2,2,13,14,2,2,]),'factor':([0,3,6,7,8,9,10,],[4,4,4,4,4,4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> term','expression',1,'p_expression_term','proplex.py',60),
  ('expression -> expression AND term','expression',3,'p_expression_and','proplex.py',65),
  ('expression -> expression OR term','expression',3,'p_expression_or','proplex.py',70),
  ('expression -> NOT expression','expression',2,'p_not_expression','proplex.py',74),
  ('expression -> expression IMP expression','expression',3,'p_expression_implication','proplex.py',78),
  ('expression -> expression DIMP expression','expression',3,'p_expression_dimplication','proplex.py',82),
  ('term -> factor','term',1,'p_term_factor','proplex.py',87),
  ('factor -> VARIABLE','factor',1,'p_factor_num','proplex.py',91),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','proplex.py',99),
]
